syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

package events;

// Generated according to https://cloud.google.com/apis/design/standard_methods
service UserService {
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {}

  rpc GetUser(GetUserRequest) returns (User) {}

  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {}

  rpc UpdateUser(UpdateUserRequest) returns (User) {}

  rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty) {}

  rpc StreamUser (StreamUserRequest) returns (stream StreamUserResponse);

  rpc StreamUsers (StreamUsersRequest) returns (stream StreamUsersResponse);

  rpc Login (LoginRequest) returns (LoginResponse);
}

message User {
  int32 id = 1;
  string name = 2;
  google.protobuf.Timestamp created_at = 3;
}

message ListUsersRequest {
  string parent = 1;

  // The maximum number of items to return.
  int32 page_size = 2;

  // The next_page_token value returned from a previous List request, if any.
  string page_token = 3;
}

message ListUsersResponse {
  repeated User users = 1;
  // Token to retrieve the next page of results, or empty if there are no more results in the list.
  string next_page_token = 2;
}

message GetUserRequest {
  // The field will contain name of the resource requested.
  int32 id = 1;
}

message CreateUserRequest {
  User user = 1;
  string password = 2;
}

message CreateUserResponse {
  User user = 1;
  string access_token = 2;
}

message UpdateUserRequest {
  // The user resource which replaces the resource on the server.
  User user = 1;

  // The update mask applies to the resource. For the `FieldMask` definition,
  // see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
  google.protobuf.FieldMask update_mask = 2;
}

message DeleteUserRequest {
  // The resource name of the user to be deleted.
  int32 id = 1;
}

message StreamUserRequest {
    int32 id = 1;
}

message StreamUserResponse {
    User user = 1;
}

message StreamUsersRequest {
    repeated int32 ids = 1;
}

message StreamUsersResponse {
    repeated User users = 1;
}

message LoginRequest {
  string username = 1;
  string password = 2;
}

message LoginResponse {
  User user = 1;
  string accessToken = 2;
}